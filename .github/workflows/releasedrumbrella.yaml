name: Release chart Datarepo chart
env:
  charts: gcloud-sqlproxy datarepo-api datarepo-ui oidc-proxy
on:
  workflow_dispatch: {}
  push:
    branches:
      - master
    paths:
      - '!charts/**'
      - '!.github/**'
      - '!README.md'
      - 'charts/datarepo/**'

jobs:
  release_chart:
    runs-on: ubuntu-latest
    needs: release_new_umbrella_dr
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: true
          fetch-depth: 0   # otherwise, you will failed to push refs to dest repo
          token: "${{ secrets.BROADBOT_TOKEN }}"

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: add repo
        run: |
          helm repo add datarepo-helm https://broadinstitute.github.io/datarepo-helm
          helm repo add stable https://charts.helm.sh/stable
          helm repo add elastic https://helm.elastic.co
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add terra-helm https://terra-helm.storage.googleapis.com
          helm repo update

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: "true"
  alpha_chart_promotion:
    runs-on: ubuntu-latest
    needs: 
      - release_chart
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: datarepo-helm

      - name: 'Checkout jade-data-repo repo'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: 'databiosphere/jade-data-repo'
          token: ${{ secrets.BROADBOT_TOKEN }}
          path: jade-data-repo

      - name: "Find latest version of Datarepo chart version in datarepo/Chart.yaml"
        id: chartversion
        run: |
          echo "::set-output name=version::$(docker run --rm -v ${PWD}:/workdir mikefarah/yq:3 yq read datarepo-helm/charts/datarepo/Chart.yaml version)"

      - name: "Find and replace Datarepo chartVersion version in alpha action"
        uses: docker://mikefarah/yq:3
        with:
          args: yq w -i jade-data-repo/.github/workflows/alpha-promotion.yaml env.chartVersion ${{ steps.chartversion.outputs.version }}

      - name: "[jade-data-repo] Merge Changes"
        uses: broadinstitute/datarepo-actions/actions/merger@0.65.0
        env:
          COMMIT_MESSAGE: "Datarepo chart version update: ${{ steps.chartversion.outputs.version }}"
          SWITCH_DIRECTORIES: "true"
  indivdual_chart_promotion:
    strategy:
      matrix:
        include:
          - app: datarepo-api
            repo: "jade-data-repo"
            filename: "int-and-connected-test-run.yml"
            jobname: "deploy_test_integration"
          - app: datarepo-ui
            repo: "jade-data-repo-ui"
            filename: "test-e2e.yml"
            jobname: "e2e_test"
    needs: 
      - release_chart
      - alpha_chart_promotion
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: datarepo-helm
          token: ${{ secrets.BROADBOT_TOKEN }}

      - name: 'Checkout ${{ matrix.repo }} repo'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: 'databiosphere/${{ matrix.repo }}'
          token: ${{ secrets.BROADBOT_TOKEN }}
          path: ${{ matrix.repo }}

      - name: "Find latest version chart version"
        id: chartversion
        run: |
          for i in $(echo ${{ env.charts }})
          do
            CHART_VERSION=$(docker run --rm -v ${PWD}:/workdir mikefarah/yq:3 yq read datarepo-helm/charts/$i/Chart.yaml 'version')
            echo "New $i version $CHART_VERSION"
            echo "::set-output name=$i-version::$CHART_VERSION"
            
          done

      - name: "Find and replace datarepo-api chartVersion version in integration action"
        uses: docker://mikefarah/yq:3
        with:
          args: yq w -i ${{ matrix.repo }}/.github/workflows/${{ matrix.filename }} "jobs.${{ matrix.jobname }}.steps.(name==Deploy to cluster with Helm).with.helm_datarepo_api_chart_version" ${{ steps.chartversion.outputs.datarepo-api-version }}

      - name: "Find and replace datarepo-ui chartVersion version in integration action"
        uses: docker://mikefarah/yq:3
        with:
          args: yq w -i ${{ matrix.repo }}/.github/workflows/${{ matrix.filename }} "jobs.${{ matrix.jobname }}.steps.(name==Deploy to cluster with Helm).with.helm_datarepo_ui_chart_version" ${{ steps.chartversion.outputs.datarepo-ui-version }}

      - name: "Find and replace gcloud-sqlproxy chartVersion version in integration action"
        uses: docker://mikefarah/yq:3
        with:
          args: yq w -i ${{ matrix.repo }}/.github/workflows/${{ matrix.filename }} "jobs.${{ matrix.jobname }}.steps.(name==Deploy to cluster with Helm).with.helm_gcloud_sqlproxy_chart_version" ${{ steps.chartversion.outputs.gcloud-sqlproxy-version }}

      - name: "Find and replace oidc-proxy chartVersion version in integration action"
        uses: docker://mikefarah/yq:3
        with:
          args: yq w -i ${{ matrix.repo }}/.github/workflows/${{ matrix.filename }} "jobs.${{ matrix.jobname }}.steps.(name==Deploy to cluster with Helm).with.helm_oidc_proxy_chart_version" ${{ steps.chartversion.outputs.oidc-proxy-version }}

      - name: print new chart
        uses: docker://mikefarah/yq:3
        with:
          args: yq r ${{ matrix.repo }}/.github/workflows/${{ matrix.filename }}

      - name: "[${{ matrix.repo }}] Merge multi chart version update"
        uses: broadinstitute/datarepo-actions/actions/merger@0.65.0
        env:
          COMMIT_MESSAGE: "Datarepo Integration mutli chart version update"
          GITHUB_REPO: ${{ matrix.repo }}
          SWITCH_DIRECTORIES: "true"
  notify-slack:
    runs-on: ubuntu-latest
    needs: 
      - release_chart
      - alpha_chart_promotion
      - indivdual_chart_promotion
    steps:
      - name: "Notify Slack"
        if: always()
        uses: broadinstitute/action-slack@v3.8.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required to work with job field
        with:
          status: ${{ job.status }}
          fields: job,repo,message
          channel: "#jade-spam"
          username: "datarepo-helm actions"
          text: "Release Datarepo Chart"

