
name: Alpha Chart Promotion
on:
  workflow_dispatch: {}

jobs:
  alpha_chart_promotion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: datarepo-helm

      - name: 'Checkout jade-data-repo repo'
        uses: actions/checkout@v2
        with:
          repository: 'databiosphere/jade-data-repo'
          token: ${{ secrets.BROADBOT_TOKEN }}
          path: jade-data-repo

      - name: "Find latest version of Datarepo chart version in datarepo/Chart.yaml"
        id: chartversion
        run: |
          echo "::set-output name=version::$(docker run --rm -v ${PWD}:/workdir mikefarah/yq:3 yq read datarepo-helm/charts/datarepo/Chart.yaml version)"

      - name: "Find and replace Datarepo chartVersion version in alpha action"
        uses: docker://mikefarah/yq:3
        with:
          args: yq w -i jade-data-repo/.github/workflows/alpha-promotion.yaml env.chartVersion ${{ steps.chartversion.outputs.version }}

      - name: "Merge using new merge action"
        uses: broadinstitute/datarepo-actions/actions/merger@sh-dr-1510-chart-version
        with:
          commit_msg: "Datarepo chart version update: ${{ steps.chartversion.outputs.version }}"

      # - name: "Merge changes to jade-data-repo"
      #   env:
      #     GITHUB_EMAIL: "broadbot@broadinstitute.org"
      #     COMMIT_MESSAGE: "Datarepo chart version update: ${{ steps.chartversion.outputs.version }}"
      #     DESTINATION_BRANCH: develop
      #   run: |
      #     TODO: pull this into datarepo-actions repo
      #     echo "[INFO] git config email to $GITHUB_EMAIL"
      #     git config --global user.email broadbot@broadinstitute.org
      #     echo "[INFO] git config name $GITHUB_USERNAME"
      #     git config --global user.name broadbot
      #     echo "[INFO] git add all"
      #     cd ${GITHUB_WORKSPACE}/jade-data-repo
      #     git add jade-data-repo/.github/workflows/alpha-promotion.yaml
      #     echo "[INFO] commit w/ msg: $COMMIT_MESSAGE"
      #     git commit -m "Datarepo chart version update: ${{ steps.chartversion.outputs.version }}"
      #     echo "[INFO] git push $DESTINATION_BRANCH"
      #     git push origin develop
      #     echo "[INFO] post push"
      #     commit=$(git rev-parse HEAD)
      #     echo "[INFO] commit: $commit"
