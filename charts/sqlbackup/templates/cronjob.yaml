{{- if .Values.backupCronJob.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ include "sqlbackup.fullname" . }}-backup"
  labels:
    {{- include "sqlbackup.labels" . | nindent 4 }}
  annotations:
    checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  schedule: {{ .Values.backupCronJob.schedule }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ include "sqlbackup.serviceAccountName" . }}
          containers:
          - name: "{{ include "sqlbackup.fullname" . }}-backup"
            image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
            command: ["/bin/sh", "-c", "/opt/script/backup.sh"]
            volumeMounts:
              {{- if or .Values.existingSecret .Values.existingSecretKey }}
              - name: "{{ include "sqlbackup.fullname" . }}-backup-sa"
                mountPath: /secrets/
                readOnly: true
              {{- end }}
              - name: "{{ include "sqlbackup.fullname" . }}-backup-script"
                mountPath: /opt/script/backup.sh
                subPath: backup.sh
                readOnly: false
          volumes:
            {{- if or .Values.existingSecret .Values.existingSecretKey }}
            - name: "{{ include "sqlbackup.fullname" . }}-backup-sa"
              secret:
                secretName: {{ .Values.existingSecret }}
                items:
                  - key: {{ .Values.existingSecretKey }}
                    path: existingSecret
            {{- end }}
            - name: "{{ include "sqlbackup.fullname" . }}-backup-script"
              configMap:
                name: {{ include "sqlbackup.fullname" . }}
                items:
                  - key: backup
                    path: backup.sh
                defaultMode: 0755
          restartPolicy: Never
      backoffLimit: 4
{{- end -}}
{{- if .Values.cleanupCronJob.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ include "sqlbackup.fullname" . }}-cleanup"
  labels:
    {{- include "sqlbackup.labels" . | nindent 4 }}
  annotations:
    checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  schedule: {{ .Values.cleanupCronJob.schedule }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ include "sqlbackup.serviceAccountName" . }}
          containers:
          - name: "{{ include "sqlbackup.fullname" . }}-cleanup"
            image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
            command: ["/bin/sh", "-c", "/opt/script/cleanup.sh"]
            volumeMounts:
              {{- if or .Values.existingSecret .Values.existingSecretKey }}
              - name: "{{ include "sqlbackup.fullname" . }}-cleanup-sa"
                mountPath: /secrets/
                readOnly: true
              {{- end }}
              - name: "{{ include "sqlbackup.fullname" . }}-cleanup-script"
                mountPath: /opt/script/cleanup.sh
                subPath: cleanup.sh
                readOnly: false
          volumes:
            {{- if or .Values.existingSecret .Values.existingSecretKey }}
            - name: "{{ include "sqlbackup.fullname" . }}-cleanup-sa"
              secret:
                secretName: {{ .Values.existingSecret }}
                items:
                  - key: {{ .Values.existingSecretKey }}
                    path: existingSecret
            {{- end }}
            - name: "{{ include "sqlbackup.fullname" . }}-cleanup-script"
              configMap:
                name: {{ include "sqlbackup.fullname" . }}
                items:
                  - key: cleanup
                    path: cleanup.sh
                defaultMode: 0755
          restartPolicy: Never
      backoffLimit: 4
{{- end }}
