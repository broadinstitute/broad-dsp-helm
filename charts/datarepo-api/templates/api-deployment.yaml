{{- $hasCredentials := include "datarepo-api.hasCredentials" . -}}
{{- $hasOauthClientSecret := include "datarepo-api.hasOauthClientSecret" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datarepo-api.fullname" . }}
  labels:
    {{- include "datarepo-api.labels" . | nindent 4 }}
  {{- if .Values.deploymentAnnotations }}
  annotations: {{- .Values.deploymentAnnotations | toYaml | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ if (($.Values).global).replicasOffline | default false -}}
      0
    {{- else -}}
      {{ .Values.replicaCount }}
    {{- end }}
  selector:
    matchLabels:
      component: {{ include "datarepo-api.fullname" . }}
  template:
    metadata:
      labels:
{{- include "datarepo-api.labels" . | nindent 8 }}
        app: {{ include "datarepo-api.fullname" . }}
        component: {{ include "datarepo-api.fullname" . }}
##  dynamically populates environment annotations
      annotations:
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
        {{ if .Values.secretsgeneric.datarepoPassword -}}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "datarepo-api.serviceAccountName" . }}
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        runAsNonRoot: true
      volumes:
        {{- if $hasCredentials }}
        - name: google-cloud-key
          secret:
            secretName: {{ include "datarepo-api.secretNameSA" . }}
            items:
              - key: {{ include "datarepo-api.secretKeyServiceAccount" . }}
                path: sa-key.json
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.shutdownTimeoutSeconds }}
      containers:
      - name: {{ include "datarepo-api.fullname" . }}
        image: {{ include "datarepo-api.image" . }}
        startupProbe:
          httpGet:
            path: /actuator/health/readiness
            port: {{ .Values.image.port }}
          initialDelaySeconds: {{ .Values.startupInitialDelaySeconds }}
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 60
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: {{ .Values.image.port }}
          initialDelaySeconds: {{ .Values.readinessInitialDelaySeconds }}
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: {{ .Values.image.port }}
          initialDelaySeconds: {{ .Values.livenessInitialDelaySeconds }}
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        lifecycle:
          preStop:
            httpGet:
              port: 8080
              path: /shutdown
        volumeMounts:
        {{ if $hasCredentials -}}
        - name: google-cloud-key
          mountPath: /var/secrets/google/
        {{ end -}}
        ports:
        - containerPort: {{ .Values.image.port }}
##  dynamically populates environment variables
        env:
          - name: LIQUIBASE_ANALYTICS_ENABLED
            value: "false"
        {{- if .Values.env }}
        {{- range $key, $value := .Values.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        {{- end }}
        {{ if $hasCredentials -}}
        - name: DB_DATAREPO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "datarepo-api.secretNameDB" . }}
              key: {{ include "datarepo-api.secretKeyDatarepoDb" . }}
        - name: DB_STAIRWAY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "datarepo-api.secretNameDB" . }}
              key: {{ include "datarepo-api.secretKeyStairwayDb" . }}
        - name: AZURE_CREDENTIALS_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "datarepo-api.secretNameAzure" . }}
              key: {{ include "datarepo-api.secretKeyApplicationSecret" . }}
        - name: AZURE_SYNAPSE_SQLADMINUSER
          valueFrom:
            secretKeyRef:
              name: {{ include "datarepo-api.secretNameAzure" . }}
              key: {{ include "datarepo-api.secretKeySynapseUser" . }}
        - name: AZURE_SYNAPSE_SQLADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "datarepo-api.secretNameAzure" . }}
              key: {{ include "datarepo-api.secretKeySynapsePassword" . }}
        - name: AZURE_SYNAPSE_ENCRYPTIONKEY
          valueFrom:
            secretKeyRef:
              name: {{ include "datarepo-api.secretNameAzure" . }}
              key: {{ include "datarepo-api.secretKeySynapseEncryptionKey" . }}
        {{ end -}}
        {{ if $hasOauthClientSecret -}}
        - name: OIDC_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "datarepo-api.secretNameOauth" . }}
              key: {{ include "datarepo-api.secretKeyOauthClientSecret" . }}
        {{ end -}}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/sa-key.json
# Supply the pod name: used to identify Stairway instances
        - name: DATAREPO_PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TERRA_COMMON_KUBERNETES_PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
# Share the timeout value between Kubernetes and Datarepo
        - name: DATAREPO_SHUTDOWNTIMEOUTSECONDS
          value: "{{ .Values.shutdownTimeoutSeconds }}"
# Tell Datarepo is it running in kubernetes
        - name: DATAREPO_INKUBERNETES
          value: "true"
        - name: TERRA_COMMON_KUBERNETES_INKUBERNETES
          value: "true"
        - name: TERRA_COMMON_KUBERNETES_POD_NAME_FILTER
          value: "datarepo-api"
        - name: TERRA_COMMON_TRACING_STACKDRIVER_EXPORT_ENABLED
          value: "false"
        - name: OPENCENCUS_SPRING_ENABLED
          value: "false"
{{- if .Values.resources }}
        resources:
{{- toYaml .Values.resources | nindent 10 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{- toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{- toYaml .Values.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{- toYaml .Values.affinity | nindent 8 }}
    {{- end }}
